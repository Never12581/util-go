// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// RunoobTblDao is the manager for logic model data accessing and custom defined data operations functions management.
type RunoobTblDao struct {
	gmvc.M                  // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      runoobTblColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB           // DB is the raw underlying database management object.
	Table  string           // Table is the underlying table name of the DAO.
}

// RunoobTblColumns defines and stores column names for table runoob_tbl.
type runoobTblColumns struct {
	RunoobId       string //
	RunoobTitle    string //
	RunoobAuthor   string //
	SubmissionDate string //
}

// NewRunoobTblDao creates and returns a new DAO object for table data access.
func NewRunoobTblDao() *RunoobTblDao {
	columns := runoobTblColumns{
		RunoobId:       "runoob_id",
		RunoobTitle:    "runoob_title",
		RunoobAuthor:   "runoob_author",
		SubmissionDate: "submission_date",
	}
	return &RunoobTblDao{
		C:     columns,
		M:     g.DB("default").Model("runoob_tbl").Safe(),
		DB:    g.DB("default"),
		Table: "runoob_tbl",
	}
}
